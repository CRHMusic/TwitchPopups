<!DOCTYPE HTML>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        *,
        *:before,
        *:after {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }
        
        body,
        html {
            height: 100%;
            background: #00000000;
        }
        
        body {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .element {
            height: 250px;
            width: 250px;
            margin: 0 auto;
            background-color: red;
            animation-name: stretch;
            animation-duration: 1.5s;
            animation-timing-function: ease-out;
            animation-delay: 0;
            animation-direction: alternate;
            animation-iteration-count: 1;
            animation-fill-mode: none;
            animation-play-state: running;
        }
        
        .bounce-in-top {
            -webkit-animation: bounce-in-top 1.1s both;
            animation: bounce-in-top 1.1s both;
        }
        
        @-webkit-keyframes bounce-in-top {
            0% {
                -webkit-transform: translateY(-500px);
                transform: translateY(-500px);
                -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
                opacity: 0;
            }
            38% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
                -webkit-animation-timing-function: ease-out;
                animation-timing-function: ease-out;
                opacity: 1;
            }
            55% {
                -webkit-transform: translateY(-65px);
                transform: translateY(-65px);
                -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
            }
            72% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
                -webkit-animation-timing-function: ease-out;
                animation-timing-function: ease-out;
            }
            81% {
                -webkit-transform: translateY(-28px);
                transform: translateY(-28px);
                -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
            }
            90% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
                -webkit-animation-timing-function: ease-out;
                animation-timing-function: ease-out;
            }
            95% {
                -webkit-transform: translateY(-8px);
                transform: translateY(-8px);
                -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
            }
            100% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
                -webkit-animation-timing-function: ease-out;
                animation-timing-function: ease-out;
            }
        }
        
        @keyframes bounce-in-top {
            0% {
                -webkit-transform: translateY(-500px);
                transform: translateY(-500px);
                -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
                opacity: 0;
            }
            38% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
                -webkit-animation-timing-function: ease-out;
                animation-timing-function: ease-out;
                opacity: 1;
            }
            55% {
                -webkit-transform: translateY(-65px);
                transform: translateY(-65px);
                -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
            }
            72% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
                -webkit-animation-timing-function: ease-out;
                animation-timing-function: ease-out;
            }
            81% {
                -webkit-transform: translateY(-28px);
                transform: translateY(-28px);
                -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
            }
            90% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
                -webkit-animation-timing-function: ease-out;
                animation-timing-function: ease-out;
            }
            95% {
                -webkit-transform: translateY(-8px);
                transform: translateY(-8px);
                -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
            }
            100% {
                -webkit-transform: translateY(0);
                transform: translateY(0);
                -webkit-animation-timing-function: ease-out;
                animation-timing-function: ease-out;
            }
        }
    </style>
</head>

<body>
    <div class="element bounce-in-top"></div>
</body>

<!-- This script is needed on every animation in order to call the parent to remove it-->
<script>
    // =======================================
    // CONFIG
    // =======================================
    // Set this as the container for the animation so the page knows what to re-add
    const topLevelContainerClass = "element";

    // Set this as the finat element to finish its animation so we can apture when it ends
    const finalAnimatorClass = "element";

    // The number of times you want the animation to loop
    const repeatCount = 2;


    // =======================================
    // HERE BE DRAGONS (No edits below this line  unless you want it to break!)
    // =======================================
    const animationObject = document.getElementsByClassName(finalAnimatorClass)[0];
    let repetitions = 1

    const repeat = () => {
        const elm = document.getElementsByClassName(topLevelContainerClass)[0];

        // Repeat the specified number of times then call the parent to close me
        if (repetitions < repeatCount) {
            const newone = elm.cloneNode(true);

            // This retriggers the animation by replacing itself with its clone
            elm.parentNode.replaceChild(newone, elm);
            document.getElementsByClassName(finalAnimatorClass)[0].addEventListener("webkitAnimationEnd", repeat);
            repetitions += 1;
        } else {
            // Once I have ffinished all my repeats tell my parent to kill me
            window.parent.postMessage("animation-end", "*");
        }
    }

    // Trigger the fist end capture
    animationObject.addEventListener("webkitAnimationEnd", repeat);
</script>

</html>