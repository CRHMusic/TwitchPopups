<!DOCTYPE HTML>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        *,
        *:before,
        *:after {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }
        
        body {
            background: #00000000;
        }
        
        .center-on-page {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        /* Pok√© Styles */
        
        .pokeball {
            position: relative;
            width: 200px;
            height: 200px;
            background: #fff;
            border: 10px solid #000;
            border-radius: 50%;
            overflow: hidden;
            box-shadow: inset -10px 10px 0 10px #ccc;
            animation: fall .25s ease-in-out, shake 1.25s cubic-bezier(.36, .07, .19, .97) 3;
        }
        
        .pokeball::before,
        .pokeball::after {
            content: "";
            position: absolute;
        }
        
        .pokeball::before {
            background: red;
            width: 100%;
            height: 50%;
        }
        
        .pokeball::after {
            top: calc(50% - 10px);
            width: 100%;
            height: 20px;
            background: #000;
        }
        
        .pokeball__button {
            position: absolute;
            top: calc(50% - 30px);
            left: calc(50% - 30px);
            width: 60px;
            height: 60px;
            background: #7f8c8d;
            border: 10px solid #fff;
            border-radius: 50%;
            z-index: 10;
            box-shadow: 0 0 0 10px black;
            animation: blink .5s alternate 7;
        }
        /* Animation */
        
        @keyframes blink {
            from {
                background: #eee;
            }
            to {
                background: #e74c3c;
            }
        }
        
        @keyframes shake {
            0% {
                transform: translate(0, 0) rotate(0);
            }
            20% {
                transform: translate(-10px, 0) rotate(-20deg);
            }
            30% {
                transform: translate(10px, 0) rotate(20deg);
            }
            50% {
                transform: translate(-10px, 0) rotate(-10deg);
            }
            60% {
                transform: translate(10px, 0) rotate(10deg);
            }
            100% {
                transform: translate(0, 0) rotate(0);
            }
        }
        
        @keyframes fall {
            0% {
                top: -200px
            }
            60% {
                top: 0
            }
            80% {
                top: -20px
            }
            100% {
                top: 0
            }
        }
    </style>
</head>

<body>
    <div class="center-on-page">
        <div class="pokeball">
            <div class="pokeball__button"></div>
        </div>
    </div>
</body>

<!-- This script is needed on every animation in order to call the parent to remove it-->
<script>
    // =======================================
    // CONFIG
    // =======================================
    // Set this as the container for the animation so the page knows what to re-add
    const topLevelContainerName = "pokeball";

    // Set this as the finat element to finish its animation so we can apture when it ends
    const finalAnimatorName = "pokeball__button";

    // The number of times you want the animation to loop
    const repeatCount = 2;


    // =======================================
    // HERE BE DRAGONS (No edits below this line  unless you want it to break!)
    // =======================================
    const animationObject = document.getElementsByClassName(finalAnimatorName)[0];
    let repetitions = 1

    const repeat = () => {
        const elm = document.getElementsByClassName(topLevelContainerName)[0];

        // Repeat the specified number of times then call the parent to close me
        if (repetitions < repeatCount) {
            const newone = elm.cloneNode(true);

            // This retriggers the animation by replacing itself with its clone
            elm.parentNode.replaceChild(newone, elm);
            document.getElementsByClassName(finalAnimatorName)[0].addEventListener("webkitAnimationEnd", repeat);
            repetitions += 1;
        } else {
            // Once I have ffinished all my repeats tell my parent to kill me
            window.parent.postMessage("animation-end", "*");
        }
    }

    // Trigger the fist end capture
    animationObject.addEventListener("webkitAnimationEnd", repeat);
</script>

</html>